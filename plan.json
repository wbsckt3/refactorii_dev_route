{
  "tipoAplicacion": "Web Application (SPA - Single Page Application)",
  "tipoPrueba": "End-to-End (E2E) Authentication Test",
  "framework": "Cypress + JavaScript + Cucumber (BDD)",
  "pipeline": "GitLab CI/CD",
  "prioridad": "High (P1) - Critical Business Function",
  "fechaEjecucion": "2025-01-20T09:00:00",
  "ambiente": "Testing (QA/TEST) - qa-crm.company.com",
  "timestamp": "2023-11-02T14:30:00Z",
  "progreso": 0,
  "exercises": "## üèó 1. Escenario de Prueba Estructurado (ISTQB)\n\n**Identificador y Nombre**: TC_AUTH_LOGIN_001 - Autenticaci√≥n exitosa de usuario Sales Manager en CRM\n\n**Precondiciones Detalladas**:\n1. Usuario con rol 'Sales Manager' registrado en BD (email: testuser@company.com, password: Test123!@#)\n2. Base de datos MySQL limpia con datos de prueba\n3. Servidor QA corriendo en puerto 8080\n4. Chrome v120+ instalado y configurado\n5. Latencia de red < 100ms\n6. Certificados SSL v√°lidos\n7. Session storage y cookies habilitadas\n\n**Pasos de Ejecuci√≥n**:\n1. Navegar a https://qa-crm.company.com/login\n2. Validar carga de p√°gina login (t√≠tulo, formulario, botones)\n3. Ingresar email v√°lido\n4. Ingresar contrase√±a v√°lida\n5. Click en bot√≥n 'Iniciar Sesi√≥n'\n6. Esperar redirecci√≥n (‚â§3s)\n7. Validar carga completa del dashboard\n8. Verificar elementos UI cr√≠ticos\n9. Chequear consola sin errores JS\n\n**Datos de Prueba**:\n- Email: testuser@company.com\n- Password: Test123!@#\n- Rol: Sales Manager\n- ID Usuario: 12345\n\n**Resultado Esperado**:\n- HTTP 200 en autenticaci√≥n\n- Redirecci√≥n a /dashboard en ‚â§3s\n- Token JWT en sessionStorage\n- Mensaje 'Bienvenido, Juan P√©rez'\n- Men√∫ con opciones correctas\n- Widget de estad√≠sticas visible\n- Footer con info de sesi√≥n\n- URL final correcta\n- T√≠tulo de p√°gina esperado\n\n**Criterios de Aceptaci√≥n**:\n- Funcionales:\n  - Tiempo autenticaci√≥n <2s\n  - Carga dashboard <5s\n  - Todos elementos UI funcionales\n- T√©cnicos:\n  - Sin errores JS/HTTP\n  - Memoria <50MB\n  - CPU <80%\n- Seguridad:\n  - Token generado correctamente\n  - Headers de seguridad presentes\n\n**Criterios de Salida**:\n- Todos los criterios de aceptaci√≥n verificados\n- Evidencia generada (screenshots, logs)\n- Reporte de ejecuci√≥n disponible\n\n## üöÄ 2. Estrategia de Automatizaci√≥n\n\n**Justificaci√≥n**:\n- Alta criticidad (flujo core del negocio)\n- Ejecuci√≥n frecuente (cada build)\n- ROI alto (reduce tiempo manual en 85%)\n- Detecci√≥n temprana de regresiones\n\n**Nivel de Prueba**:\n- Nivel 2 en pir√°mide (E2E)\n- Cubre integraci√≥n frontend-backend\n\n**Enfoque**:\n- BDD con Cucumber para claridad\n- Cypress para robustez en SPA\n- Patr√≥n Page Object para mantenibilidad\n\n**Riesgos y Mitigaci√≥n**:\n- Flakiness por timing:\n  - Esperas inteligentes\n  - Reintentos configurados\n- Datos inconsistentes:\n  - Setup/teardown de BD\n  - Usar factories de datos\n- Cambios en selectores:\n  - Centralizar locators\n  - Usar data-test-id\n\n## üõ† 3. Dise√±o T√©cnico de Automatizaci√≥n\n\n**Framework**:\n- Cypress + Cucumber:\n  - Soporte nativo para SPA\n  - Debugging f√°cil\n  - Screenshots autom√°ticos\n  - BDD integrado\n\n**Arquitectura**:\n- Page Object Pattern:\n  - LoginPage.js\n  - DashboardPage.js\n- Steps compartidos\n- Hooks para setup/teardown\n- Custom commands para acciones repetidas\n\n**Configuraci√≥n Ambiente**:\n- Node.js v18+\n- Cypress v12+\n- Cucumber preprocessor\n- ChromeDriver compatible\n- Variables de entorno para:\n  - URLs\n  - Credenciales\n  - Timeouts\n\n**Gesti√≥n de Datos**:\n- Fixtures para datos est√°ticos\n- Factories para datos din√°micos\n- Seeds para BD\n- Cleanup post-ejecuci√≥n\n\n**Sincronizaci√≥n**:\n- Esperas inteligentes:\n  - cy.intercept() para API calls\n  - cy.waitUntil() para condiciones\n- Timeouts configurables\n- Retries para flakiness\n\n## üîÑ 4. Integraci√≥n CI/CD\n\n**Pipeline GitLab CI/CD**:\n```yaml\nstages:\n  - test\n\nauth_e2e:\n  stage: test\n  image: cypress/browsers:node18-chrome120\n  script:\n    - npm install\n    - npx cypress run --spec cypress/e2e/auth/login.feature\n  artifacts:\n    when: always\n    paths:\n      - cypress/screenshots/\n      - cypress/videos/\n      - test-results/\n```\n\n**Triggers**:\n- Push a main\n- Merge requests\n- Scheduled (diario 9AM)\n\n**Reportes**:\n- HTML con Cucumber\n- Screenshots en fallos\n- Video de ejecuci√≥n\n- JUnit para CI\n\n**Notificaciones**:\n- Slack en fallos\n- Email a QA Lead\n- Dashboard de m√©tricas\n\n**Rollback**:\n- Bloquear deploy si falla\n- Revertir autom√°tico si >50% fallos\n\n## üíª 5. C√≥digo Base de Automatizaci√≥n\n\n**login.feature**:\n```feature\nFeature: Authentication\n  Scenario: Successful login as Sales Manager\n    Given I navigate to login page\n    When I enter valid credentials\n    Then I should be redirected to dashboard\n    And I should see welcome message for \"Juan P√©rez\"\n```\n\n**loginSteps.js**:\n```javascript\nimport { Given, When, Then } from '@badeball/cypress-cucumber-preprocessor';\nimport LoginPage from '../../pages/LoginPage';\nimport DashboardPage from '../../pages/DashboardPage';\n\nconst loginPage = new LoginPage();\nconst dashboardPage = new DashboardPage();\n\nGiven('I navigate to login page', () => {\n  loginPage.visit();\n  loginPage.validatePageLoaded();\n});\n\nWhen('I enter valid credentials', () => {\n  loginPage.enterEmail('testuser@company.com');\n  loginPage.enterPassword('Test123!@#');\n  loginPage.submit();\n});\n\nThen('I should be redirected to dashboard', () => {\n  cy.url().should('include', '/dashboard');\n  dashboardPage.validatePageLoaded();\n});\n\nThen('I should see welcome message for {string}', (name) => {\n  dashboardPage.validateWelcomeMessage(name);\n});\n```\n\n**LoginPage.js**:\n```javascript\nclass LoginPage {\n  elements = {\n    emailInput: () => cy.get('#username'),\n    passwordInput: () => cy.get('#password'),\n    loginButton: () => cy.get('#login-btn'),\n    pageTitle: () => cy.title()\n  };\n\n  visit() {\n    cy.visit('/login');\n  }\n\n  validatePageLoaded() {\n    this.elements.pageTitle().should('contain', 'Login');\n    this.elements.emailInput().should('be.visible');\n    this.elements.loginButton().should('be.enabled');\n  }\n\n  enterEmail(email) {\n    this.elements.emailInput().type(email);\n  }\n\n  enterPassword(password) {\n    this.elements.passwordInput().type(password, { log: false });\n  }\n\n  submit() {\n    this.elements.loginButton().click();\n  }\n}\n\nexport default LoginPage;\n```\n\n## üìä 6. M√©tricas y Monitoreo\n\n**KPIs Automatizaci√≥n**:\n- Tasa de √©xito: ‚â•95%\n- Tiempo ejecuci√≥n: <2min\n- Detecci√≥n defectos: 24h\n\n**M√©tricas Calidad C√≥digo**:\n- Code coverage: ‚â•80%\n- Complejidad ciclom√°tica: <5\n- Duplicaci√≥n: <5%\n\n**Indicadores Estabilidad**:\n- Flakiness rate: <3%\n- False positives: <2%\n\n**Tiempo Ejecuci√≥n Objetivo**:\n- Total: 90 segundos\n- Autenticaci√≥n: 2 segundos\n- Dashboard: 5 segundos"
}
